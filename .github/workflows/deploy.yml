name: Build and Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: # This section makes the image name available to other jobs
      image_name: ${{ steps.build_image.outputs.image_name }}
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 2: NEW! Use the Azure login to authenticate Docker with your ACR
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io

      - name: Build and push Docker image
        id: build_image # Give this step an ID to reference its outputs
        run: |
          repo=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${repo}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${repo}:${{ github.sha }}
          echo "image_name=${{ env.ACR_NAME }}.azurecr.io/${repo}:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build # Depends on the build job
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -var="image_name=${{ needs.build.outputs.image_name }}" --auto-approve

